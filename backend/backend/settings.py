"""
Django setting for backend project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import sys
from pathlib import Path

from decouple import config
from split_settings.tools import include

from .apps import import_apps
from .components.CORS.hosts import Hosts

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
PROJECT_NAME = config("PROJECT_NAME", default="AufruttenProject")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True if "test" in sys.argv else config("DEBUG", default=False, cast=bool)

# SECURITY WARNING: keep the secret key used in production secret!                                         -
SECRET_KEY = "TEST_SECRET_KEY" if DEBUG else config("SECRET_KEY", cast=str)

HOSTS = Hosts(DEBUG)
ALLOWED_HOSTS = [HOSTS.backend]

# Other CORS configuration in ./components/CORS/settings.py
CORS_ALLOWED_ORIGINS = [f"https://{HOSTS.frontend}"]
CSRF_TRUSTED_ORIGINS = [f"https://{HOSTS.frontend}", f"https://{HOSTS.backend}"]

CSRF_COOKIE_DOMAIN = f".{HOSTS.frontend}"
SESSION_COOKIE_DOMAIN = f".{HOSTS.frontend}"

# Application definition
INSTALLED_APPS = [
    # Default apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Health Check
    'health_check',
    'health_check.db',
    'health_check.cache',
    'health_check.storage',
    'health_check.contrib.migrations',
    'health_check.contrib.celery',
    'health_check.contrib.celery_ping',
    'health_check.contrib.redis',

    # Celery
    'django_celery_beat',

    # REST FRAMEWORK - API
    'django_filters',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_simplejwt',

    # SWAGGER FOR API
    'drf_spectacular',
    'drf_spectacular_sidecar',

    # Social Django - (Social Auth)
    'social_django',

    # CORS
    "corsheaders",

    # Import Export Data
    'import_export',
]

# APPS
INSTALLED_APPS += import_apps()


MIDDLEWARE = [
    # DEFAULT
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # CORS
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'backend' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                # Social Django
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "HOST": config("POSTGRES_HOST", default="postgres-svc", cast=str),
        "PORT": config("POSTGRES_PORT", default=5432, cast=int),
        "NAME": config("POSTGRES_NAME", default="root", cast=str),
        "USER": config("POSTGRES_USER", default="django", cast=str),
        "PASSWORD": config("POSTGRES_PASSWORD", default=SECRET_KEY, cast=str),
        "TEST": {"NAME": "TEST"}
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Berlin'

USE_I18N = True

USE_TZ = True

LOCALE_PATHS = [BASE_DIR / 'localization']


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL = 'media/'

# FileStorage configuration in ./components/Cloudinary/settings.py
STATIC_ROOT = BASE_DIR / 'staticfiles'
MEDIA_ROOT = BASE_DIR / 'uploads'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AGE_REMARK = {"MIN": 16, "MAX": 50}  # Old's


# Other settings
include('components/DRF/settings.py')         # Django Rest Framework Settings
include('components/CORS/settings.py')        # Cross-origin resource sharing (CORS) Settings and ALLOWED_HOSTS
include('components/Email/settings.py')       # Email configuration
include('components/OAuth2/settings.py')      # Auth Settings
include('components/Celery/settings.py')      # Celery configuration
include('components/Cloudinary/settings.py')  # Cloudinary configuration
