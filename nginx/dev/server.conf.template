
server {
    listen                                        80;
    listen                                   [::]:80;
    server_name               ${DEBUG_FRONTEND_HOST};
    return             301 https://$host$request_uri;
}

server {
    listen                                   443 ssl;
    listen                              [::]:443 ssl;
    server_name               ${DEBUG_FRONTEND_HOST};

    ssl_certificate           ${CERT_SSL};
    ssl_certificate_key       ${CERT_KEY};

    ssl_protocols             TLSv1.2 TLSv1.3;
    ssl_ciphers               'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;
    ssl_session_timeout       1d;
    ssl_session_cache         shared:SSL:50m;
    ssl_session_tickets       off;
    ssl_stapling              off; # off - is use when only in dev
    ssl_stapling_verify       on;

    location / {
      proxy_pass              http://frontend-svc;

      proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;
      proxy_set_header        Host              $host;
      proxy_set_header        X-Real-IP         $remote_addr;
      proxy_set_header        Cookie            $http_cookie;
      proxy_pass_header       Set-Cookie;
      proxy_buffering         off;

      # dev WS
      proxy_http_version      1.1;
      proxy_set_header        Upgrade           $http_upgrade;
      proxy_set_header        Connection        $http_connection;
      proxy_cache_bypass                        $http_upgrade;
    }

    include /etc/nginx/mime.types;
}